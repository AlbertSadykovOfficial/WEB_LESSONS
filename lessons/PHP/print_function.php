<?php 
	/*
		Ф-ции
		Для того, чтобы не выводить функию print, 
		А ЗАПОМНИТЬ выводимые значения, нужно воспользоваться
		функцией sprintf();

		$hexstring = sprintf("%X%X%X", 65, 127, 245);
		$out = sprintf("Результат: $%.2f", 123.42 / 12);
		
-----------------------------------------------------------------------
		Усовершенствванная ф-ция print
			printf("Меня зовут %s. Мне %d года, то есть %X в шестнадцатеричном представлении",    
						'Симон', 33, 33); // ропускашь аргумент Ошибка: ) встречена в неожиданном месте
			Таблицу букв можно найти d,b,s,o...
		Примеры:
			Не хочется переводить числа в 16 формат, можно установить так: 
				printf("<span color='#%X%X%X'>Привет</span>", 65, 127, 245);
			
			Отображение 2х чисел после запятой(денежный формат)
				printf("Результат: $%.2f", 123.42 / 12); 
	*/

 echo "<pre>"; // Тег, позволяющий отображать все пустые пространства
  // Дополнение пробелами до 15 знако-мест     
 			printf("Результат равен $%15f\n", 123.42 / 12);
  // Дополнение нулями до 15 знако-мест     
 			printf("Результат равен $%015f\n", 123.42 / 12);
  // Дополнение пробелами до 15 знако-мест и вывод с точностью до двух  
  // десятичных знаков     
 			printf("Результат равен $%15.2f\n", 123.42 / 12);
  // Дополнение нулями до 15 знако-мест и вывод с точностью до двух
  // десятичных знаков    
  	  printf("Результат равен $%015.2f\n", 123.42 / 12);
  // Дополнение символами # до 15 знако-мест и вывод с точностью до двух     
  // десятичных знаков    
  	  printf("Результат равен $%'#15.2f\n", 123.42 / 12);	// Можно поставить любой символ, так: '^

/*  	  Начало преобразования |	Дополняющий символ | Кол-во дополняющих символов | Точность отображения|Спецификатор преобразования | Примеры
								% 																						15 																											f 							10 .285000 % 										 0										 	 15 														.4 											 f   			  000000000010 .29
								% 									 '# 											15 														 .2 											f 					########10.2850
*/

/*
			Дополнение строк
*/
	echo "<pre>"; // Тег, позволяющий отображать все пустые пространства
  $h = 'Rasmus';
  printf("[%s]\n",        $h); // Стандартный вывод строки  
  printf("[%12s]\n",      $h); // Выравнивание пробелами по правому краю до ширины 12  
  printf("[%-12s]\n",     $h); // Выравнивание пробелами по левому краю  
  printf("[%012s]\n",     $h); // Дополнение нулями  
  printf("[%'#12s]\n\n",  $h); // Использование специально выбранного
                                 // символа дополнения '#'
  
  $d = 'Rasmus Lerdorf';
  printf("[%12.8s]\n",     $d); // Выравнивание по правому краю с усечением                                
  																// до 8 символов  
  printf("[%-12.12s]\n",   $d); // Выравнивание по левому краю с усечением
                                  // до 12 символов  
  printf("[%-'@12.10s]\n", $d); // Выравнивание по левому краю, дополнение
                                  // символом '@', усечение до 10 символов
 ?>