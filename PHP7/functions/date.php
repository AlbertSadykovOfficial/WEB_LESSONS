<?php 
/*
			Установка часового пояса
			Либо в php.ini, либо вначале скрипта:
			date.timezone = "Europe/Moscow" //ini
			date_default_timezone_set("Europe/Moscow"); //script


			Время в формате time_stamp () от 1 янв 1970 (Стандарт UNIX)
			int time() 		// Псоледние изменение файлов представлено именно в таком формате
			
			Время вернет (при false) дробую часть секунд и целую через пробел (считая от time)
			при true верент вещественное число
			mixed microtime(bool $asFloat = false)


			Время работы скрипта:
			define("START_TIME", microtime(true)); 
			
			Последний вызов 
			printf("Время работы скрипта: %.5f c", microtime(true) - START_TIME); 


//--- Большие вещественные числа (пробелма неточности)
			"В машинной арифметкие между 0 и 1 находится столько же дробных чисел, сколько между 1 и бесконечностью"		
			$time= microtime(true); 
			printf{"C Ha'lana 3nOX11 UNIX: %f ceKYH.JJ.<br />", $time);  // 887883858.313820 
			echo "C Ha'lana 3noX11 UNIX: $time ceKYH.a.<br />"; 				// 887883858.314

			Так при преобразовании строку в php сильно падает точность, что, возможно исзодит о того, что
			double 8 byte преобразуется в float 4 byte

			!!! Пожтому при выводе аккуратнее

//--- Строковое представление даты
			
			string date(strinq $format [,int $timestamp]) 

			echo date("l dS of FY h:i:s A<br />"); 
			echo date("Сегодня d.m.Y<br />"); 
			

			Относитеьно локали
			string strftime (string $format [,int $timestamp]) 
			<?php
				setlocale(LC_ALL, 'ru_RU.UTF-8'J; 
				echo strftime("%B %Y года, %d число. Был %A, часы показывали %H:%M."); 
			?>

//--- Построение timestamp (обратое преобразование - из человеческого в машинное)
			int mktime ( 
										[int $hour] 
										[, int $minute] 
										[, int $second] 
										[, int $month] 
										[, int $day] 
										[, int $year] 
										[, int $is_dst = -1)) // is_dst = 1 для летнего времени / is_dst=0 зимнего
			
			Если что-то указать неверно, 200 месяцев, то функция выведет каку-нибудь дату, но не правильную
			
			Тоже самое, но принимает строку в свободном формате. и можно указать не по порядку
			int strtotime(string $time [,int $timestamp])

//--- Разбор timestamp
			
			Вернет ассоциативный массив времени с ключами (seconds, minutes,...)
			array gatdate(int $ timestamp) 

//--- Григорианский календарь:
			
			(Помним, что timestamb не может выдать дату нижу 1970 и выше текущего, на помощь может придти, например, каленарь)

			Преобразование даты в формат JDC (4714 ДО н.э. - 9999 н.э)
			int GregorianToJD(int $month, int $day, int $year) 			
			
			JDC В ДАТУ
			string JDToGregorian(int $julianday) 

			День недели на который призодится дата:
			mixed JDDayOfWeek(int $julianday, int $mode= 0) 
				mode:
				0: номер дня недли 0 - воскресенье, 1 - понедельник
				1: англ название дня недели
				2: сокращенное англ название

			Проверка существования даты: (год от 1900 до 32767)
			int checkdate(int $month, int $day, int $year) 

//--- Дата и вемя по Гринвичу
			
			Скрипт ориентируется на текущее врея сервера, а не пользователя, поэтоу нужно для пользователя его отдеьно преобразовать
			
			Время GMT/UTC (Greenwich Mean Time). Время, которое показывают сейчас часы в Гринвиче (Англия) - ВРЕМЯ нулевого меридинана.
			Преыдущие функции умают, что мы нахоимся на Гринвиче
			Шаблон: GMT +ЧЧ:00.
			Именно в GMT СЛЕДУЕТ ХРАНИТЬ ИНФОРМАИЮ О ВРЕМЕНИ, ТАК КАК ее лего можно преобразовать из любой точки планеты обратно. (Москва +3);
			Перевод времеи реализован на стр. 375 книги PHP 7 В подлиннике

			Строковое получение даты 
			gmdate();

			В timestamp
			gmmktime();



*/


?>