<?php

			/*
					
					 Редирект - ситуация, в которой запускается некоторый скрипт(сценарий), но страница, которую в итоге
					 						увидит пользователь, оказывается сгенерированной другим сценарием.


					 Программа переадресацией передает управление другому сценарию, когда не справляется сама.
			
			*/
			
			/*		

					 Внешний редирект - переход н другой URL.

					 Пример:
					1)echo '<meta http-equiv="Refresh" 
					 							content="0;               // Приступить через 0 секунд (немедленно)
					 							URL=/some/other/script.html"> // URI/URL
						exit();
						
					2)header("Location: http://{$_SERVER['SERVER_NAME']}/other/script.html"); exit (); // URL !
					

					Внутренний редирект - все остается в пределах ожного сайта и при переходе можно 
																указывать лишь URI.

					Когда сервер получает от скрипта страницу и собираетя отправить е бразузеру, он проверяет:
					нет ли в ней заголовка Location с указанием URI
					Если он пристутсвтует, то сервер порождает новый процесс.
					URI надо использовать абсолютный, при относительном появится ссылка в бразуере 
					на пререход на другую страницу.

					При такой подмене адресная строка браузера не меняется, т.е:
					Если мы переходили на page.php, а переадресовались на result.php,
					то в строке URL будет page.php. 
					Отсюда следует то, что даже если мы при преадресации сменим каталог,
					то все пути к картинкам и т.д. сохранятся, ведь браузр о переадресации не знает.
					И если мы метнемся от страницы нвостей к регистрации в другом каталоге, то картинка
					путь к картинкам на стр. регистрации будет отсчитываться от страницы новостей.
					Поэтому нужно для изображений использовать абсолютный путь



					Пример (CGI версия PHP):
					<?php
						// Форсируем 
							header("Status: 200 OK");
						
						// Получаем каталог текущего скрипта
							$dir = dirname($_SERVER['SCRIPT_NAME']);

							if ($dir == '\\' } $dir = '';
						
						// Переадресовываем
							header("Location: $dir/result.php");
							exit(}; 
					?>
			*/

			/*
					
					Самопереадресация.

					При предачи данных методом POST, данные записываются в файл/БД
					при ее обновлении, при этом переданные POST данные для 
					текущего файла будут активны, т.е переменная POST будет
					существовать и при желаннии обновленить страницу, даже при том,
					что пользователь не ввожил никакие данные они уже будут запонены,
					поэтому выведется предупредение браузреа: 
					Вы хотите отправить данные формы повторно?

					Чтобы устранить это нужно после перезаписи осуществить самопереадресацию,
					осуществив тем самым очистку значений :
					header("Location: http://{$_SERVER['SERVER_NAME']}{$_SERVER['SCRIPT_NAME']}?$rnd");
					exit;
			*/
?>			
					<!DOCTYPE html>
					<html lang="en">
					<head>
						<meta charset="UTF-8">
						<title> Использование Самопереадресации</title>
					</head>
					<body>
						<?php
									$FNAME = "book.txt";
									if (@$_REQUEST['doAdd'])
									{
											$f = fopen($FNAME, "a");
											if (@$_REQUEST['text']) fputs ($f, $_REQUEST['text']."\n");
											fclose ($f);
											$rnd = time(); # Спец Суффикс для URL, чтобы страницы была уникально и не дотсалась из кэша

											header("Location: http://{$_SERVER['SERVER_NAME']}{$_SERVER['SCRIPT_NAME']}?$rnd");
											exit(); 
									}

									$gb = @file($FNAME);
									if (!$gb) $gb = []; 
						?>

						<form action="<?=$_SERVER['SCRIPT_NAME']?>" method="POST">
							Текст:<br>
							<textarea name="text"></textarea><br />
							<input type="submit" name="doAdd" value="Отправить"> 
						</form>

						<?php 
								foreach($gb as $text) 
								{
						 			htmlspecialchars($text).'<br /><hr />';
						 		}
						 ?>

						
					</body>
					</html>